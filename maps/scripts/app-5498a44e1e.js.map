{"version":3,"sources":["scripts/app.js"],"names":[],"mappings":"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","file":"scripts/app-5498a44e1e.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('weatherApp', [\n      'ngAnimate',\n      'ngCookies',\n      'restangular',\n      'ui.router',\n      'ui.bootstrap',\n      'toastr',\n      'ngMap'\n  ]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('weatherApp')\n    .directive('weather', weatherDirective);\n\n  /** @ngInject */\n  function weatherDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/weather/weather.html',\n      require: 'ngModel',\n      scope: {\n         model: '=ngModel'\n      },\n      controller: WeatherController\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function WeatherController($scope) {\n\n      $scope.getCloudness = function() {\n        var val;\n        switch(true) {\n          case ($scope.model.clouds.all >= 0 &&\n                $scope.model.clouds.all <= 30):\n            val = 'shiny';\n            break;\n          case ($scope.model.clouds.all > 30 &&\n                $scope.model.clouds.all <= 65):\n            val = 'medium';\n            break;\n          default:\n            val = 'heavy';\n        }\n        return val;\n      };\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('weatherApp')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  function acmeNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n        geo: '=',\n      },\n      controller: NavbarController,\n      controllerAs: 'navbar',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController($scope, $state) {\n      var vm = this;\n      vm.$state = $state;\n\n      var geo;\n      $scope.$on('coordinates', function(event, data) {\n        geo = data;\n      });\n\n      vm.changeState = function() {\n        $state.go('app.forecast', {\n          lat: geo.latitude,\n          lon: geo.longitude\n        });\n      };\n\n\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('weatherApp')\n    .service('Helpers', HelpersService);\n\n  /** @ngInject */\n  function HelpersService() {\n    var service = this;\n\n    service.addLeadZero = function(value) {\n      return (\"0\" + value).slice(-2);\n    };\n\n    service.parseData = function(data) {\n      var parsedData = {};\n\n      if (data.list && data.list.length) {\n        angular.forEach(data.list, function(value) {\n\n          var arr = value.dt_txt.split(' ');\n          var dateKey = arr[0];\n          value.time = arr[1].slice(0, 5);\n\n          if (!parsedData[dateKey]) {\n            parsedData[dateKey] = [];\n          }\n          parsedData[dateKey].push(value);\n\n        });\n      }\n\n      return parsedData;\n    };\n\n    return service;\n  }\n\n})();\n\nangular.module('weatherApp')\n  .directive('googleplace', function() {\n    return {\n      require: 'ngModel',\n      link: function(scope, element, attrs, model) {\n        var options = {\n          types: []\n        };\n        scope.gPlace = new google.maps.places.Autocomplete(element[0], options);\n\n        google.maps.event.addListener(scope.gPlace, 'place_changed', function() {\n          scope.$apply(function() {\n            model.$setViewValue(element.val());\n          });\n        });\n      }\n    };\n  });\nangular.module('weatherApp')\n  .directive('getCoordinates', function() {\n    return {\n      restrict: 'A',\n      scope: {\n        address: '=ngModel',\n        coordinates: '=getCoordinates'\n      },\n      controller: function($scope, $http, $attrs, $element, $rootScope) {\n\n        var stutter = false;\n\n        var additionalLanguageUnchor = {\n          url: '',\n          lang: ''\n        };\n\n        function addressTranslate(event, newAdr) {\n          stutter = true;\n          $scope.address = newAdr;\n        }\n\n        $scope.$watch('address', function(newAddress) {\n\n          if (newAddress && !stutter) {\n            var apiKey = '&key=' + 'AIzaSyB6Fs_IoNpXI7_a3PvUQvx7E3r04QvGiMk';\n            var parsedAddress = newAddress.split(' ').join('+');\n            var addressUrl = 'https://maps.googleapis.com/maps/api/geocode/json?address=' + parsedAddress + additionalLanguageUnchor.url;\n\n            $http({\n              method: 'GET',\n              url: addressUrl\n            }).then(function successCallback(response) {\n              if (response && response.data && response.data.results[0]) {\n                $scope.coordinates.latitude = response.data.results[0].geometry.location.lat;\n                $scope.coordinates.longitude = response.data.results[0].geometry.location.lng;\n                var addressTranslation = response.data.results[0].formatted_address;\n                $rootScope.$broadcast('coordinates', $scope.coordinates);\n              }\n\n            });\n          }\n\n          stutter = false;\n\n        });\n      }\n    };\n  });\n(function() {\n  'use strict';\n\n  angular\n    .module('weatherApp')\n    .service('API', APIService);\n\n  /** @ngInject */\n  function APIService($http, $q, config, toastr) {\n    var service = this;\n    var validateArgument = function(value) {\n      return !!value;\n    };\n    var lat = 50.4501,\n        lon = 30.5234;\n    var c = config;\n    service.forecast = {\n      url: c.PROTOCOL + c.API_URL + c.PORT + c.DIR_SEP +\n           c.API_PATH + c.API_VERSION + c.DIR_SEP +\n           c.FORECAST_ACTION + \"?APIKEY=\" + c.API_KEY,\n\n      get: function(lat, lon) {\n        var defer = $q.defer();\n        if (typeof lat == 'undefined' || typeof lon == 'undefined') {\n          defer.reject();\n          return defer.promise;\n        }\n        var url = this.url + '&lat=' + lat + \"&lon=\" + lon;\n        $http\n          .get(url)\n          .then(function(response) {\n            defer.resolve(response.data);\n          })\n          .catch(function(reason) {\n            toastr.error( angular.toJson(reason, true) );\n          });\n\n        return defer.promise;\n      }\n    };\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('weatherApp')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($scope) {\n    var vm = this;\n\n    // $scope.$on('coordinates', function(event, data) {\n    //   console.log(vm.geo);\n    // });\n\n  }\n})();\n(function () {\n\t'use strict';\n\tangular.module('weatherApp')\n\t.controller('ForecastController', function ($scope, API, Helpers, $stateParams) {\n\t\tvar vm = this;\n\n\t\t// console.time('API call');\n\t\tAPI.forecast\n\t\t\t.get($stateParams.lat, $stateParams.lon)\n\t\t\t.then(function (data) {\n\t\t\t\tvm.city = data.city;\n\t\t\t\t// console.timeEnd('API call');\n\t\t\t\tvm.data = Helpers.parseData(data);\n\t\t\t});\n\n\n\t});\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('weatherApp')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($rootScope, $state) {\n\n  $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams) {\n\n    if ( toState.name === 'app.forecast' && (toParams.lat === '' || toParams.lon === '') ) {\n      console.log('event was prevented');\n      event.preventDefault();\n    }\n  });\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('weatherApp')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('app', {\n        url: '/',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'main'\n      })\n      .state('app.forecast', {\n        url: 'forecast/:lat/:lon',\n        templateUrl: 'app/forecast/forecast.html',\n        controller: 'ForecastController',\n        controllerAs: 'forecast',\n        params: {\n          lat: { value: '' },\n          lon: { value: '' }\n        },\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('weatherApp')\n    .constant('config', {\n      PROTOCOL:         'http://',\n      API_URL:          'api.openweathermap.org',\n      PORT:             '',\n      API_PATH:         'data/',\n      API_VERSION:      '2.5',\n      API_KEY:          '4c587b809e3a95f7da6dd36259885bc3',\n      FORECAST_ACTION:  'forecast',\n      DIR_SEP:          '/'\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('weatherApp')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"weatherApp\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/forecast/forecast.html\",\"<style>.weather-description div {\\n    height: 50px;\\n  }</style><h1>{{::forecast.city.name}}</h1><div class=container><div class=row ng-repeat=\\\"(key, value) in forecast.data track by $index\\\"><h2>{{key}}</h2><div class=\\\"col-md-2 weather-description\\\"><div>Время</div><div>Облачность, %</div><div>Осадки</div><div>Дождь (3ч), мм</div><div>Скорость ветра, м/c</div><div>Направление ветра</div><div>Температура, &deg;С средняя</div><div>Температура, &deg;С максимум</div><div>Температура, &deg;С минимум</div><div>Влажность, %</div><div>Давление, мм рт.ст</div></div><div class=\\\"col-md col-sm-1\\\" ng-repeat=\\\"hour in value track by $index\\\"><weather ng-model=hour></weather></div></div></div>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=container><acme-navbar geo=main.geo></acme-navbar><ui-view></ui-view><input type=text class=geo ng-model=main.geo.address googleplace get-coordinates=main.geo><div ng-if=main.geo.latitude>lat: {{main.geo.latitude}} lon: {{main.geo.longitude}}</div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-static-top navbar-inverse\\\"><div class=container-fluid><div class=navbar-header><a class=navbar-brand href=#><span class=\\\"glyphicon glyphicon-home\\\"></span> Weather APP {{geo}}</a></div><div class=\\\"collapse navbar-collapse\\\" id=bs-example-navbar-collapse-6><ul class=\\\"nav navbar-nav\\\"><li ng-class=\\\"{\\'active\\': vm.$state.is(\\'app\\')}\\\"><a ui-sref=app>Home</a></li><li ng-class=\\\"{\\'active\\': vm.$state.is(\\'app.forecast\\')}\\\"><a href=\\\"\\\" ng-click=navbar.changeState()>5 days</a></li></ul></div></div></nav>\");\n$templateCache.put(\"app/components/weather/weather.html\",\"<div class=weather-container><div class=time>{{model.time}}</div><div class=\\\"clouds {{::getCloudness()}}\\\">{{model.clouds.all}} %</div><div>{{model.weather[0].description}}</div><div>{{model.rain[\\'3h\\'] || \\'n/a\\'}}</div><div>{{model.wind.speed || \\'n/a\\'}}</div><div>{{model.wind.deg || \\'n/a\\'}}</div><div>{{model.main.temp || \\'n/a\\'}}</div><div>{{model.main.temp_max || \\'n/a\\'}}</div><div>{{model.main.temp_min || \\'n/a\\'}}</div><div>{{model.main.humidity || \\'n/a\\'}}</div><div>{{model.main.pressure || \\'n/a\\'}}</div></div><hr>\");}]);"],"sourceRoot":"/source/"}